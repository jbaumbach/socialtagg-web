extends layout

//- Include any page-specific javascript here
block javascripts

  script(type='text/javascript', src='/js/ng-events.js')
  script(type='text/javascript', src='//cdnjs.cloudflare.com/ajax/libs/moment.js/2.2.1/moment.min.js')
  script(type='text/javascript', src='/js/pikaday.js')
  link(rel='stylesheet', type='text/css', href='/css/pikaday.css')


block content

  .container
    .sixteen.columns
      #page-title
        h2 My Owned Events
        #bolded-line  
  
  if !public.isLoggedIn
    .container
      .sixteen.columns
        .headline.no-margin
          h3 Events
  
          p Please 
            a(href=links.login) log in.
  else
    .controllerContainer.my-events(ng-controller='eventController')
      .container
      
        .sixteen.columns
          //-.headline.no-margin.event-list
            h4 Events I Own
          
          //- Error message, set style explicitly so it won't flash on page refresh
          .notification.error(ng-show='hasError', style='display: none;')
            p
              span Sorry, there was an error! &nbsp; {{ errorMsg }}
              a.close(href='#', ng-click='hasError=false', no-click)
        
          table.standard-table(ng-show='hasEvents', style='display: none;')
            thead
              tr
                th Name
                th Created
                th Actions
            tbody
              tr(data-id='{{event.uuid}}', ng-repeat='event in events')
                td
                 a(href='#', ng-click='editEvent(event)', no-click) {{ event.name }}
                td {{ event.created | date:'EEEE, M-d-yyyy, h:mm:ss a' }}
                td.event-actions
                  a.button.gray(href='#', ng-click='editEvent(event)', no-click) Edit
                  a.button.gray(href='#', ng-click='deleteEvent(event)', no-click) Delete
                  a.button.color(href='{{ event.path }}') View
                  i.icon-spinner.icon-spin.icon-2x(ng-show='event.isWorking')
          
          p(ng-show='!hasEvents && isLoading') Loading events...
          
          p(ng-show='!hasEvents && !isLoading', style='display: none;') You do not own any events at this time.
        
          a.button.color(href='#', ng-click='showEdit()', no-click) New Event
        
      .container(ng-show='isEditVisible', style='display: none;')
        
        .six.columns
          //-
          //- Note: we're using Angular validation, so turn off HTML5 validation
          //- See: http://dailyjs.com/2013/06/06/angularjs-7/
          //-
          form.form-horizontal.new-event
            .headline 
              h4 Event Details
            
            input(type='hidden', ng-model='editableEvent.uuid')
        
            //- Note: the ng-model fields below must match the properties in the Event object
        
            .field
              label(for='inputName') Name of Event
              input.text(type='text', size='100', id='inputName', ng-model='editableEvent.name', required)
  
            .field
              label(for='inputAddress') Address
              input.text(type='text', size='100', id='inputAddress', ng-model='editableEvent.address', required)

            .container.six.columns.event-datetime
              .two.columns
                .field
                  label(for='inputStartDate') Start Date
                  input.text(type='text', id='inputStartDate', ng-model='editableEvent.startDate', required, placeholder='m/d/yyyy')

              .two.columns
                .field
                  label(for='inputStartTime') Time
                  input.text(type='text', id='inputStartTime', ng-model='editableEvent.startTime', required, placeholder='h:mm AM/PM')

            .container.six.columns.event-datetime
              .two.columns
                .field
                  label(for='inputEndDate') End Date
                  input.text(type='text', id='inputEndDate', ng-model='editableEvent.endDate', required, placeholder='m/d/yyyy')
              
              .two.columns
                .field
                  label(for='inputEndTime') Time
                  input.text(type='text', id='inputEndTime', ng-model='editableEvent.endTime', required, placeholder='h:mm AM/PM')

            .field.five.columns.event-datetime
              label(for='inputWebsite') Website Url
              input.text(type='url', size='100', id='inputWebsite', ng-model='editableEvent.website')

            .field.five.columns.event-datetime
              label(for='inputDescription') Description
              textarea(id='inputDescription', ng-model='editableEvent.description', required)

            .container.six.columns
              a.button.color(href='#', ng-click='saveEvent(editableEvent)', no-click) Save
              a.button.gray(href='#', ng-click='cancelEdit()', no-click) Close
              i.icon-spinner.icon-spin.icon-2x(ng-show='isWorking')
  
        .six.columns
          .headline
            h4 Post-Event Survey

          div(ng-show='isCurrentEventSaved && (!survey || survey.inactiveInd)')
            a.button.color(href='#', ng-click='showSurvey()', no-click) Add a Survey
          
          div(ng-show='!isCurrentEventSaved')
            p Save the current event to show survey options.
          
          div(ng-show='isCurrentEventSaved && isLoadingSurvey')
            p Looking for a survey...

          form.survey(ng-show='isCurrentEventSaved && survey && !survey.inactiveInd && !isLoadingSurvey')

            .field
              label(for='surveyWhenToShowType') When to show survey to attendees
              select(id='surveyWhenToShowType', ng-model='survey.whenToShowType', ng-options='q.value as q.label for q in surveyTypes')

            .field(ng-show='survey.whenToShowType == "showAfterXMins"')
              label(for='surveyWhenToShowMins') Number of minutes
              input.text(type='text', id='surveyWhenToShowMins', ng-model='survey.whentoShowMins')

            .headline
              h4 Survey Questions
            
            ol.survey-questions(ng-show='survey.questions && survey.questions.length > 0')
              li(ng-repeat='question in survey.questions') 
                a(href='#', ng-click='editQuestion(question)', no-click) {{ question.text }}
                i.mini-ico-remove-sign(ng-click='removeQuestion(question)')
  
            p(ng-show='survey.questions && survey.questions.length == 0') Click 'Add Question' to add your survey questions.
            
            a.button.color(href='#', ng-click='addSurveyQuestion()', no-click) Add Question
            
            .form-horizontal.new-survey-question(ng-show='editableQuestion')

              .headline
                h4 Survey Question Detail

              .field
                label(for='questionText') Question Text
                input.text(type='text', ng-model='editableQuestion.text', required)

              .field
                label(for='surveyQuestionType') Answer Type 
              
                .container.six.columns
                  .three.columns
                    select(ng-model='editableQuestion.type', ng-options='q.value as q.label for q in questionTypes')
              
                  .three.columns
                    a.button.color(href='#', ng-click='saveQuestion(editableQuestion)', no-click) Save Question

              .multipleChoice(ng-show='showMultichoice()')
                .headline
                  h4 Multiple Choice Answers
  
                p
                
                ol.multi-choice-options
                  li(ng-repeat='choice in editableQuestion.choices') {{ choice }}
                    i.mini-ico-remove-sign(ng-click='removeMultichoicePossibleAnswer(choice)')
                
                p(ng-show='!editableQuestion.choices || editableQuestion.choices.length == 0')
                  | Enter the possible choices for this question below.  Click the plus sign after each one.

                .field.answer-type
                  label(for='multichoicePossibleAnswer') Multiple Choice Possible Answer
                  
                  .container
                    .five.columns
                      input.text(type='text', ng-model='multichoicePossibleAnswer', id='multichoicePossibleAnswer', required)
                    .one.column
                      i.ico-circle-plus(ng-click='saveMultichoicePossibleAnswer()')

            p
            
            a.button.color(href='#', ng-click='saveSurvey()', no-click) Save Survey
            a.button.gray(href='#', ng-click='removeSurvey()', no-click) Remove Survey
            i.icon-spinner.icon-spin.icon-2x(ng-show='isSurveyWorking')
